# Этот файл содержит определения вентиляторов для dual_carriage Автор ALEX_45
# 22.11.2023
#
#########[Вентиляторы экструдеров:]######################################################

[heater_fan extruder0_fan]
heater: extruder
pin:               PA2
shutdown_speed:    0
kick_start_time:   0.1
off_below:         0.2

[heater_fan extruder1_fan]
heater: extruder1
pin:               PA0
shutdown_speed:    0
kick_start_time:   0.1
off_below:         0.2

#########[Вентиляторы обдува модели:]############################220##########################

[fan_generic PartFAN_extruder]
pin:               PA3
shutdown_speed:    0
kick_start_time:   0.1
off_below:         0.2

[fan_generic PartFAN_extruder1]
pin:               PE6
shutdown_speed:    0
kick_start_time:   0.1
off_below:         0.2


#########[Вентиляторы обдува Драйверов:]######################################################

[controller_fan my_controller_fan]
#cycle_time:      0.005
pin:             PB1
max_power:       1
shutdown_speed:  0     
kick_start_time: 0.5    
fan_speed:       1.0
#idle_speed:
# The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# will be set to when a heater or stepper driver was active and
# before the idle_timeout is reached. The default is fan_speed.
heater:  extruder, extruder1
stepper: extruder, extruder1, stepper_x, dual_carriage, stepper_y, stepper_z

#########[Температурные сенсоры:]##############################################################

[temperature_sensor Mcu]
sensor_type: temperature_mcu
sensor_mcu: mcu


[gcode_macro M106]
description: изменения скорости вращения вентиляторов охлаждения детали с учетом IDEX
#rename_existing: M106.1
variable_last_speed: 0 # переменная хранящая последнюю заданную скорость, используется в IDEX 
gcode:
  {% set s = [[params.S|default(255)|int, 255]|min, 0]|max %}
  SET_GCODE_VARIABLE MACRO=M106 VARIABLE=last_speed VALUE={s}
  {% set speed = s / 255|float %} #перевод диапазона значений от 0..255 в 0..1

  # Opt into fan speed swop control
  # если переключаемые головы, то каждая управляется отдельно:
  {% if printer.dual_carriage.carriage_1 == "INACTIVE" or printer.dual_carriage.carriage_1 == "PRIMARY" %} 
    SET_FAN_SPEED FAN=PartFAN_{printer.toolhead.extruder} SPEED={speed}
    # противоположная выключается
    {% if printer.toolhead.extruder == "extruder1" %}
      SET_FAN_SPEED FAN=PartFAN_extruder  SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=PartFAN_extruder1 SPEED=0
    {% endif %}
  # если зависмые головы (копия, зеркало) вертиляторы работают синхронно:
  {% else %}
    SET_FAN_SPEED FAN=PartFAN_extruder  SPEED={speed}
    SET_FAN_SPEED FAN=PartFAN_extruder1 SPEED={speed}
  {% endif %}

[gcode_macro M107]
description: выключение всех вентиляторов охлаждения детали IDEX
#rename_existing: M107.1
gcode:
  M106 S0
     
 
[gcode_macro CARRIAGE_PRINT_FAN]
description: Set automatically the print fan speed for dual carriages modes 
gcode:
    {% set fan_vars = printer["gcode_macro FAN_VARIABLE"] %}      
    
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        ### read print fan speed from active carriage/extruder
        {% set fan_speed = printer["fan_generic " + fan_vars.fan].speed|float %}
        {% set fan1_speed = printer["fan_generic " + fan_vars.fan1].speed|float %}
        {% set fan_speed = [fan_speed, fan1_speed]|max %}
    {% endif %}
        
    {% if fan_vars.active_fan == 0 %}
        ### FAN on carriage X1
        SET_FAN_SPEED FAN={fan_vars.fan} SPEED={fan_speed}
        SET_FAN_SPEED FAN={fan_vars.fan1} SPEED=0
    {% elif fan_vars.active_fan == 1 %}
        ### FAN on carriage X2
        SET_FAN_SPEED FAN={fan_vars.fan} SPEED=0
        SET_FAN_SPEED FAN={fan_vars.fan1} SPEED={fan_speed}
    {% endif %}




